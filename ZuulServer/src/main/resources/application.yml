eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/
  instance:
    # 每间隔1s，向服务端发送一次心跳，证明自己依然”存活“
    lease-renewal-interval-in-seconds: 5
    # 告诉服务端，如果我2s之内没有给你发心跳，就代表我“死”了，将我踢出掉。
    lease-expiration-duration-in-seconds: 10
server:
  port: 8889
security:
  user:
     password: user  # 直接登录时的密码
  ignored: /
  sessions: never   # session策略
  oauth2:
    #sso:
    #   loginPath: /login   # 登录路径
    client:
       clientId: 1
       clientSecret: 2
       #进行授权的服务，Default URL: /oauth/authorize
       accessTokenUri: http://localhost:7001/oauth/token
       #获取token的服务，Default URL: /oauth/token
       userAuthorizationUri: http://localhost:7001/oauth/authorize
    resource:
       userInfoUri: http://localhost:7001/getUser
    #   preferTokenInfo: false
spring:
  application:
    name: ZuulServer
  #mvc:
  #  throw-exception-if-no-handler-found: true


zuul:
  host:
    max-total-connections: 200
    max-per-route-connections: 20
  routes:
     customer:
      # *只能匹配单层   **分层匹配 也就是可以匹配多层
       path: /Customer/**
       serviceId: CustomerServer
       #某个服务的重试
       retryable: false
       # Url 方式访问 不会执行熔断以及无法使用ribbon做负载均衡
     order:
       path: /Order/**
       serviceId: OrderServer
  #全局重试机制
  retryable: false
  #ignored-services: '*'
  # prefix:
  # strip-prefix: true
 # 直接使用url访问 则这样配置超时时间
 # host: d
 #   connections: 500
 #   socket-timeout-millis: 60000
 #   connect-timeout-millis: 60000


#若是通过serviceId访问 则使用ribbon 和 hystrix 超时时间
#2个配置取的是 数值小的 谁小谁生效
ribbon:
    ReadTimeout: 4000
    SocketTimeout: 4000

hystrix:
    command:
    #default 是指给所有路由默认 若要指定路由 此处应为 注册在eurake的名称 如 OrderServer
        default:
            execution:
                isolation:
                     thread:
                         timeoutInMilliseconds: 30000
                #timeout:
                #     enabled: false