eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/
  instance:
    # 每间隔1s，向服务端发送一次心跳，证明自己依然”存活“
    lease-renewal-interval-in-seconds: 5
    # 告诉服务端，如果我2s之内没有给你发心跳，就代表我“死”了，将我踢出掉。
    lease-expiration-duration-in-seconds: 10
server:
  port: 8771
spring:
  application:
    name: CustomerServer
  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest

#ribbon:
#    ReadTimeout: 10000 #获取或设置读取操作未完成时发生超时之前的毫秒数。
#    ConnectTimeout: 10000 #客户端等待与服务器建立连接的时间（以毫秒计）
#    MaxAutoRetries: 0 #在同一台服务器上重试的最大次数
#    MaxAutoRetriesNextServer: 1 #切换实例的重试次数
#    OkToRetryOnAllOperations: true #对所有操作请求都进行重试
#    eureka:
#        enabled: true

feign:
    hystrix:
        enabled: true
    compression:
      # 配置请求GZIP压缩
      request:
          enabled: true
          # 配置压缩支持的MIME TYPE
          mime-types: text/xml,application/xml,application/json
          # 配置压缩数据大小的下限
          min-request-size: 2048
      # 配置响应GZIP压缩
      response:
          enabled: true
      httpclient:
          enable: true

management:
   security:
    enabled: false





customer:
    message: 你好中国人更新后


#OrderServer:
#  ribbon:
#    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RandomRule
#NFLoadBalancerClassName：应该实施 ILoadBalancer
#NFLoadBalancerRuleClassName：应该实施 IRule
#NFLoadBalancerPingClassName：应该实施 IPing
#NIWSServerListClassName：应该实施 ServerList